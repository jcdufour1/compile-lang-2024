
// this function currently only works for integer types
fn abs(num NumT, NumT Type) NumT {
    if num < unsafe_cast<NumT>0 {
        // TODO: "-num" should be allowed for floating point types
        return unsafe_cast<NumT>0 - num
    }
    return num
}

fn pow(base BaseT, exponent u64, BaseT Type) BaseT {
    let result BaseT = unsafe_cast<BaseT>1
    for idx u64 in 0..exponent {
        result *= base
    }
    return result
}
