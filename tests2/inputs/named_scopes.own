type io import = std.io

fn break_stmts() {
    defer io.printf("bye\n")

    thing: for 1 {
        defer io.printf("yes 1.4\n")
        io.printf("yes 1.1\n")
        thing2: for 1 {
            defer io.printf("yes 1.3\n")
            io.printf("yes 1.2\n")
            if 1 {
                for 1 {
                    yield(thing)
                }
            }
            defer io.printf("no 1.2\n")
            io.printf("no 1.1\n")
        }
        defer io.printf("no 1.3\n")
        io.printf("no 1.4\n")
    }

    thing3: for 1 {
        defer io.printf("yes 2.6\n")
        io.printf("yes 2.1\n")
        thing4: for 1 {
            defer io.printf("yes 2.3\n")
            io.printf("yes 2.2\n")
            yield(thing4)
            defer io.printf("no 2.3\n")
            io.printf("no 2.4\n")
        }
        defer io.printf("yes 2.5\n")
        io.printf("yes 2.4\n")
        yield(thing3)
        defer io.printf("no 2.2\n")
        io.printf("no 2.1\n")
    }

    thing5: for 1 {
        defer io.printf("yes 3.4\n")
        io.printf("yes 3.1\n")
        thing6: if 1 {
            defer io.printf("yes 3.3\n")
            io.printf("yes 3.2\n")
            yield(thing5)
            defer io.printf("no 3.3\n")
            io.printf("no 3.4\n")
        }
        defer io.printf("no 3.598\n")
        io.printf("no 3.498\n")
    }
}

fn continue_stmts() {
    defer io.printf("bye\n")

    let idx i32 = 0
    thing: for 1 {
        defer io.printf("yes 4.6\n")
        io.printf("yes 4.1\n")
        thing2: for 1 {
            defer idx += 1
            defer io.printf("yes 4.5\n")
            io.printf("yes 4.2\n")
            if idx > 0 {
                yield(thing)
            }
            defer io.printf("yes 4.4\n")
            io.printf("yes 4.3\n")
            continue2(thing)
            defer io.printf("no 4.2\n")
            io.printf("no 4.1\n")
        }
        defer io.printf("no 4.3\n")
        io.printf("no 4.4\n")
    }

    let idx2 i32 = 0
    thing3: for 1 {
        defer io.printf("yes 5.6\n")
        io.printf("yes 5.1\n")
        thing4: for 1 {
            defer io.printf("yes 5.5\n")
            io.printf("yes 5.2\n")
            defer idx2 += 1
            if idx2 > 0 {
                yield(thing3)
            }
            defer io.printf("yes 5.4\n")
            io.printf("yes 5.3\n")
            continue2(thing4)
            defer io.printf("no 5.2\n")
            io.printf("no 5.1\n")
        }
        defer io.printf("no 5.3\n")
        io.printf("no 5.4\n")
    }
}

fn main() i32 {
    break_stmts()
    continue_stmts()

    return 0
}
