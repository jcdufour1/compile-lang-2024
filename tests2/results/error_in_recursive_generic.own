compile::stdout 0
b''
compile::stderr 0
b'./tests2/inputs/error_in_recursive_generic.own:36:23:\x1b[1;31merror\x1b[0;39m:0 generic arguments are passed, but 1 generic arguments expected\n    35 |     io.printf("%d\\n", add2(<i32>)(57, -3))\n    36 |     io.printf("%d\\n", add3(58, -2))\n       |                       ^\n    37 |     return 0\n./tests2/inputs/error_in_recursive_generic.own:23:4:\x1b[1;34mnote\x1b[0;39m:generic parameters defined here\n    22 | \n    23 | fn add3(<NumType>)(lhs NumType, rhs NumType) NumType {\n       |    ^\n    24 |     if rhs < 0 {\n./tests2/inputs/error_in_recursive_generic.own:15:16:\x1b[1;31merror\x1b[0;39m:0 generic arguments are passed, but 1 generic arguments expected\n    14 |     if rhs < 0 {\n    15 |         return add2(lhs - 1, rhs + 1)\n       |                ^\n    16 |     } \n./tests2/inputs/error_in_recursive_generic.own:13:4:\x1b[1;34mnote\x1b[0;39m:generic parameters defined here\n    12 | \n    13 | fn add2(<NumType>)(lhs NumType, rhs NumType) NumType {\n       |    ^\n    14 |     if rhs < 0 {\n./tests2/inputs/error_in_recursive_generic.own:8:31:\x1b[1;31merror\x1b[0;39m:argument is of type `i32`, but the corresponding parameter `lhs` is of type `i31`\n     7 |     if rhs > 0 {\n     8 |         return add(<i31>)(lhs + 1, rhs - 1)\n       |                               ^\n     9 |     }\n./tests2/inputs/error_in_recursive_generic.own:3:19:\x1b[1;34mnote\x1b[0;39m:corresponding parameter `lhs` defined here\n     2 | \n     3 | fn add(<NumType>)(lhs NumType, rhs NumType) NumType {\n       |                   ^\n     4 |     if rhs < 0 {\n'
compile::return_code 1

