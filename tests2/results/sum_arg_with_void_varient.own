compile::stdout 0
b''
compile::stderr 0
b'./tests2/inputs/sum_arg_with_void_varient.own:11:29:\x1b[1;31merror\x1b[0;39m:inner type is void; remove ()\n    10 |     let token1 Token = Token.open_par\n    11 |     let token2 Token = Token.open_par()\n       |                             ^\n    12 |     let token3 Token = Token.open_par(76)\n./tests2/inputs/sum_arg_with_void_varient.own:12:29:\x1b[1;31merror\x1b[0;39m:inner type is void; remove ()\n    11 |     let token2 Token = Token.open_par()\n    12 |     let token3 Token = Token.open_par(76)\n       |                             ^\n    13 | \n./tests2/inputs/sum_arg_with_void_varient.own:16:14:\x1b[1;31merror\x1b[0;39m:inner type is void; remove ()\n    15 |         case .num(num): break\n    16 |         case .open_par(): break\n       |              ^\n    17 |     }\n./tests2/inputs/sum_arg_with_void_varient.own:20:14:\x1b[1;31merror\x1b[0;39m:inner type is void; remove ()\n    19 |         case .num(num): break\n    20 |         case .open_par(num): break\n       |              ^\n    21 |     }\n./tests2/inputs/sum_arg_with_void_varient.own:24:14:\x1b[1;31merror\x1b[0;39m:inner type is void; remove ()\n    23 |         case .num(num): break\n    24 |         case .open_par(num, string): break\n       |              ^\n    25 |     }\n'
compile::return_code 1

