
extern("c") fn printf(format_string: ptr, args: any...) i32

fn add_one(num_ptr: i32*) {
    deref(num_ptr) = deref(num_ptr) + 1
    return
}

fn operation_2(num_ptr_2: i32*) {
    deref(num_ptr_2) = 2*deref(num_ptr_2) + 1
    return
}

struct Div {
    numerator: i32
    denominator: i32
}

fn set_div(div_ptr: Div*) {
    let new_div: Div = {.numerator = 134, .denominator = 45};
    deref(div_ptr) = new_div;
    return
}

fn main() i32 {
    let num: i32 = 8
    printf("%d\n", num)
    add_one(refer(num))
    printf("%d\n", num)
    operation_2(refer(num))
    printf("%d\n", num)

    let div: Div = {.numerator = 87, .denominator = 123};
    printf("%d/%d\n", div.numerator, div.denominator)
    set_div(refer(div));
    printf("%d/%d\n", div.numerator, div.denominator)

    return 0
}

