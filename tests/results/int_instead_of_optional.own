compile::stdout 0

compile::stderr 30
tests/inputs/int_instead_of_optional.own:36:44:[1;31merror[0;39m:function parameter `ItemType` was not specified
    35 | fn main() i32 {
    36 |     io.printf("test 100: got number %d\n", add_one_or_two_default_2(835, .some(11)))
       |                                            ^
    37 | 
tests/inputs/int_instead_of_optional.own:14:95:[1;34mnote[0;39m:function parameter `ItemType` defined here
    13 | 
    14 | fn add_one_or_two_default_2(lhs io.Optional(<ItemType>), rhs io.Optional(<ItemType>) = .none, ItemType Type) ItemType {
       |                                                                                               ^
    15 |     switch rhs {
tests/inputs/int_instead_of_optional.own:39:69:[1;31merror[0;39m:argument is of type `u10`, but the corresponding parameter `lhs` is of type `std/io::Optional(<i32>)`
    38 |     let opt110 io.Optional(<i32>) = .some(838)
    39 |     io.printf("test 110: got number %d\n", add_one_or_two_default_2(835, opt110))
       |                                                                     ^
    40 | 
tests/inputs/int_instead_of_optional.own:14:29:[1;34mnote[0;39m:corresponding parameter `lhs` defined here
    13 | 
    14 | fn add_one_or_two_default_2(lhs io.Optional(<ItemType>), rhs io.Optional(<ItemType>) = .none, ItemType Type) ItemType {
       |                             ^
    15 |     switch rhs {
tests/inputs/int_instead_of_optional.own:42:80:[1;31merror[0;39m:argument is of type `std/io::Optional(<i32>)`, but the corresponding parameter `rhs` is of type `std/io::Optional(<u32>)`
    41 |     let opt111 io.Optional(<i32>) = .some(838)
    42 |     io.printf("test 111: got number %d\n", add_one_or_two_default_2(.some(14), opt111, u32))
       |                                                                                ^
    43 |     return 0
tests/inputs/int_instead_of_optional.own:14:58:[1;34mnote[0;39m:corresponding parameter `rhs` defined here
    13 | 
    14 | fn add_one_or_two_default_2(lhs io.Optional(<ItemType>), rhs io.Optional(<ItemType>) = .none, ItemType Type) ItemType {
       |                                                          ^
    15 |     switch rhs {

compile::return_code 1

