type io import = std.io
type coll import = std.collections
type util import = std.util

type Token struct(<NumT, StrT>) {
    num NumT
    string StrT
}

fn main() i32 {
    let arr coll.Arr(<Token(<i32, u8*>)>) = {unsafe_cast<Token(<i32, u8*>)*>util.malloc(1000000), 0, 100}
    util.assert(arr.buf != unsafe_cast<Token(<i32, u8*>)*>0, "out of memory")
    coll.arr_append(&arr, {9187, "hello"}, Token(<i32, u8*>))
    io.printf("%s\n", coll.arr_first(arr, Token(<i32, u8*>)).string);
    return 0
}
