
type io import = std.io
type util import = std.util

fn add_one_or_two_default(lhs ItemType, rhs util.Optional(<ItemType>) = .none, ItemType Type) ItemType {
    switch rhs {
        case .some(rhs_val):
            return lhs + rhs_val
        case .none:
            return lhs
    }
    return lhs
}

fn add_one_or_two_default_2(lhs util.Optional(<ItemType>), rhs util.Optional(<ItemType>) = .none, ItemType Type) ItemType {
    switch rhs {
        case .some(rhs_val): {
            if let .some(lhs_val) = lhs {
                return lhs_val + rhs_val
            } else {
                return rhs_val
            }
        }
        case .none: {
            if let .some(lhs_val) = lhs {
                return lhs_val
            } else {
                return 0
            }
        }
    }
    util.assert(0, "unreachable")
    return 0
}

fn main() i32 {
    io.printf("test 100: got number %d\n", add_one_or_two_default_2(835, .some(11)))

    let opt110 util.Optional(<i32>) = .some(838)
    io.printf("test 110: got number %d\n", add_one_or_two_default_2(835, opt110))

    let opt111 util.Optional(<i32>) = .some(838)
    io.printf("test 111: got number %d\n", add_one_or_two_default_2(.some(14), opt111, u32))
    return 0
}

