type io import = std.io
type util import = std.util

fn main() i32 {
    let opt util.Optional(<i32>) = .some(7)
    if let .some(num) = opt {
        io.printf("yes 1: %d\n", num)
    }

    if let .some(num) = opt {
        io.printf("yes 2: %d\n", num)
    } else {
        io.printf("no 2\n")
    }

    opt = .none
    if let .some(num) = opt {
        io.printf("no 3: %d\n", num)
    } else {
        io.printf("yes 3\n")
    }

    if let .some(num) = opt {
        io.printf("no 4: %d\n", num)
    }

    let result1 util.Result(<i32, Str>) = .ok(6)
    if let .ok(num) = result1 {
        let num2 i32 = num
        io.printf("yes 5: %d\n", num)
    } else (str) {
        io.printf("no 5: ")
        io.print_str(str)
    }

    let result2 util.Result(<i32, Str>) = .error("did not work")
    if let .ok(num) = result2 {
        io.printf("no 6: %d\n", num)
    } else (str) {
        io.printf("yes 6: ")
        io.print_str(str)
    }

    let result3 util.Result(<i32, Str>) = .ok(6)
    if let .error(str) = result3 {
        io.printf("no 7: ")
        io.print_str(str)
    } else (num) {
        let num4 i32 = num
        io.printf("yes 7: %d\n", num)
    }

    let result4 util.Result(<i32, Str>) = .error("did not work")
    if let .error(str) = result4 {
        io.printf("yes 8: ")
        io.print_str(str)
    } else (num) {
        io.printf("no 8: %d\n", num)
    }

    return 0
}
