
fn sub(lhs NumType, rhs NumType, NumType Type) {
    let result NumType = lhs - rhs
    return result
}

fn add(lhs NumType, rhs NumType, dummy DummyType, NumType Type, DummyType Type) {
    let result NumType = lhs + rhs
    return result
}

type Token struct(<ItemType, PosType>) {
    item ItemType
    pos PosType
}

fn main() i32 {
    let num1 i32 = sub(7, 8, i32, i64)
    let num2 i32 = add(7, 8, 9, i32)
    let token1 Token = {.item = 87, .pos = 32}
    let token2 Token(<i32, i32, i32>) = {.item = 88, .pos = 33}
    return 0
}
