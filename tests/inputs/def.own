
type io import = std.io
type util import = std.util

type Opt def = util.Optional
//type Token def = io.Token
type print def = io.printf

fn add_internal(lhs NumType, rhs NumType, NumType Type) NumType {
    return lhs + rhs
}

type add def = add_internal

fn main() i32 {
    let num i32 = 8
    print("hello\n")
    print("%d\n", add(54, 3, i32))

    let opt Opt(<i32>) = .some(43)

    switch opt {
        case .some(num): print("%d\n", num)
        case .none: print("nothing\n")
    }

    return 0
}
